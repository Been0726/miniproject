plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

def querydslDir = "$buildDir/generated/querydsl"

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-devtools:3.1.0'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'
	implementation 'org.modelmapper:modelmapper:3.2.2'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// ✅ QueryDSL 설정 (중요)
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta' // ✅ 이것 말고도
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'      // ✅ 이 라인도 추가!!!
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	implementation("org.springframework.boot:spring-boot-starter-websocket:3.5.3")
}

sourceSets {
	main {
		java {
			srcDirs += querydslDir
		}
		resources {
			srcDirs = ['src/main/resources']
		}
	}
}

configurations {
	querydsl.extendsFrom annotationProcessor
}

tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

tasks.named('test') {
	useJUnitPlatform()
}


